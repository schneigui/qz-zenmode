import * as React from "react"
import { Frame, Data, addPropertyControls, ControlType } from "framer"
import { qzYellow, qzCoral, qzInk, qzTeal, qzWhite } from "../Assembly"

function getClassFromStyle(style) {
    if (style === "normalStyle") return normalStyle
    if (style === "hoverStyle") return hoverStyle
    if (style === "disabledStyle") return disabledStyle
    if (style === "outlinedStyle") return outlinedStyle
    if (style === "alertStyle") return alertStyle
}
export function UI_Button(props) {
    return (
        <Frame
            size={"100%"}
            style={{ ...uiButton, ...getClassFromStyle(props.btnStyle) }}
            width={props.btnWidth}
            height={props.btnHeight}
        >
            {props.btnLabel}
        </Frame>
    )
}

// Default Props
UI_Button.defaultProps = {
    btnLabel: "Label",
    btnStyle: "normalStyle",
    btnWidth: "100%",
    btnHeight: "42px",
    height: 42,
}

// Add Property Controls
addPropertyControls(UI_Button, {
    btnLabel: {
        title: "Label",
        type: ControlType.String,
        defaultValue: "Label",
    },
    btnStyle: {
        title: "Style",
        type: ControlType.Enum,
        defaultValue: "normalStyle",
        options: [
            "normalStyle",
            "hoverStyle",
            "disabledStyle",
            "outlinedStyle",
            "alertStyle",
        ],
        optionTitles: ["Normal", "Hover", "Disabled", "Outlined", "Alert"],
    },
    btnWidth: {
        title: "Width",
        type: ControlType.SegmentedEnum,
        defaultValue: "100%",
        options: ["auto", "100%"],
        optionTitles: ["Auto", "Custom"],
    },
    btnHeight: {
        title: "Height",
        type: ControlType.SegmentedEnum,
        defaultValue: "42px",
        options: ["42px", "69px"],
        optionTitles: ["Small", "Hero"],
    },
})

const uiButton: React.CSSProperties = {
    // Code Imported from Production:
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    paddingRight: "1.5rem",
    paddingLeft: "1.5rem",
    fontFamily: "Avenir",
    fontSize: "0.875rem",
    fontWeight: 600,
    boxSizing: "border-box",
    WebkitAppearance: "none",
    MozAppearance: "none",
    appearance: "none",
    cursor: "pointer",
    transition: "none",
    // lineHeight: "1.2",
    // transition: "all 120ms cubic-bezier(0.47,0,0.745,0.715)",
}
const normalStyle: React.CSSProperties = {
    color: qzWhite,
    backgroundColor: qzTeal,
}
const hoverStyle: React.CSSProperties = {
    color: qzInk,
    backgroundColor: qzYellow,
}
const disabledStyle: React.CSSProperties = {
    color: "#fff",
    backgroundColor: "#C0CACD",
}
const alertStyle: React.CSSProperties = {
    color: qzWhite,
    backgroundColor: qzCoral,
}
const outlinedStyle: React.CSSProperties = {
    color: `${qzTeal}`,
    border: "solid 2px",
    borderColor: `${qzTeal}`,
    backgroundColor: "#fff",
}
